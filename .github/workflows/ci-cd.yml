name: TrashDrop CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint || echo "No linting configured"
    
    - name: Run tests
      run: npm test -- --watchAll=false
      env:
        CI: true
        REACT_APP_SUPABASE_URL: ${{ secrets.REACT_APP_SUPABASE_URL }}
        REACT_APP_SUPABASE_ANON_KEY: ${{ secrets.REACT_APP_SUPABASE_ANON_KEY }}
    
    - name: Build
      run: |
        # Use environment variables from GitHub secrets
        export REACT_APP_SUPABASE_URL="${{ secrets.REACT_APP_SUPABASE_URL }}"
        export REACT_APP_SUPABASE_ANON_KEY="${{ secrets.REACT_APP_SUPABASE_ANON_KEY }}"
        npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-files
        path: build/

  deploy-preview:
    needs: build-and-test
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-files
        path: build
    
    # This step is a placeholder - customize based on your preview deployment needs
    - name: Deploy to preview environment
      run: |
        echo "Deploying to preview environment"
        # Add your deployment commands here
        # For example: npm run deploy:preview

  deploy-production:
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-files
        path: build
    
    # This step is a placeholder - customize based on your production deployment needs
    - name: Deploy to production
      run: |
        echo "Deploying to production environment"
        # Add your deployment commands here
        # For example: npm run deploy:production
